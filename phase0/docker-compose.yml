# https://github.com/bitnami/bitnami-docker-kafka/issues/265
version: '3'
services:
  zookeeper:
    container_name: tantalo-zookeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: tantalo-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://${EXPOSED_URL}:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS=topic1:1:1,topic2:1:1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - EXTRA_ARGS= -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.17.2.jar=29101:/usr/share/jmx_exporter/kafka-broker.yaml
    volumes:
      - ./kafka:/usr/share/jmx_exporter/
    #  - ./kafka/scripts:/docker-entrypoint-initdb.d
    #    - kafka-jmx-volume:/jmx-exporter
    depends_on:
      - zookeeper
    restart: always

  influxdb:
    container_name: tantalo-influxdb
    image: influxdb:2.6.0
    ports:
      - "18086:8086"
    # depends_on:
    #   - kafka
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin1234
      - DOCKER_INFLUXDB_INIT_ORG=fitness
      - DOCKER_INFLUXDB_INIT_BUCKET=misure
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=2abdb6a7-ea6e-4044-a051-5f1a99fed42c
    volumes:
      - ./influxdb/scripts:/docker-entrypoint-initdb.d
    #      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    restart: always

  kafka-ui:
    container_name: tantalo-kafka-ui
    image: provectuslabs/kafka-ui:v0.5.0
    ports:
      - "18080:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=tantalo-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    restart: always

  grafana:
    container_name: tantalo-grafana
    image: grafana/grafana:9.3.2
    depends_on:
      - prometheus
    volumes:
      # - grafana-volume:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=admin1234"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    ports:
      - "13000:3000"
    restart: always




